,query,output
0,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and return the work items created by that user
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['$$PREV[0]']}]}]"
1,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get all high priority work items owned by user1 and summarize them
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}, {'argument_name': 'issue.priority', 'argument_value': ['p0', 'p1']}, {'argument_name': 'type', 'argument_value': ['issue', 'task']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
2,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Fix the bug in the login feature'
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Fix the bug in the login feature'}]}]"
3,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Summarize work items similar to don:core:dvrv-us-1:devo/0:issue/1
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
4,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get all work items created by user1 and owned by user2
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'owned_by', 'argument_value': ['user2']}]}]"
5,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}]"
6,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items 123 and 456 to sprint 789
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
7,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for insights from the text 'The sales of product X have decreased by 20% in the last quarter'
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'The sales of product X have decreased by 20% in the last quarter'}]}, {'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'product X'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'ticket.severity', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['ticket']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[2]'}]}]"
8,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and prioritize work items created by that user
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['$$PREV[0]']}]}]"
9,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Please follow up with the customer regarding the issue'
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Please follow up with the customer regarding the issue'}]}]"
10,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for the text 'Implement new feature for project XYZ'
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature for project XYZ'}]}, {'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[2]'}]}]"
11,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and return a list of work items that are similar to the given work item
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
12,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature for project X'
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature for project X'}]}, {'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'sprint_id', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'project', 'argument_value': ['X']}, {'argument_name': 'type', 'argument_value': ['task']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[2]'}]}]"
13,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and prioritize their high priority tasks
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'priority', 'argument_value': ['high']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[1]'}]}]"
14,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and find similar work items to the one with ID 12345
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': '12345'}]}]"
15,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items owned by user1 and created by user2
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}, {'argument_name': 'created_by', 'argument_value': ['user2']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[1]'}]}]"
16,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize open work items assigned to user1
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'status', 'argument_value': ['open']}, {'argument_name': 'assigned_to', 'argument_value': ['user1']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
17,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}]}]"
18,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the work item with the highest priority
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'issue.priority', 'argument_value': ['p0', 'p1']}]}, {'tool_name': 'get_highest_priority', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
19,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the given text
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text.'}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'sprint_id', 'argument_value': 'sprint1'}]}]"
20,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint with ID 789
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
21,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'This is a sample text'
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text'}]}]"
22,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123, 456, and 789 to sprint with ID 001
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456', '789']}, {'argument_name': 'sprint_id', 'argument_value': '001'}]}]"
23,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for the top 10 high priority tickets from the customer UltimateCustomer and add them to sprint 5
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'UltimateCustomer'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'ticket.severity', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['ticket']}, {'argument_name': 'sort_by', 'argument_value': ['priority']}, {'argument_name': 'limit', 'argument_value': [10]}]}, {'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'The top 10 high priority tickets from UltimateCustomer need to be addressed immediately.'}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'sprint_id', 'argument_value': '5'}]}]"
24,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the top 10 most recent work items from the customer UltimateCustomer
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'UltimateCustomer'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'sort_by', 'argument_value': ['created_at']}, {'argument_name': 'limit', 'argument_value': [10]}]}]"
25,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint with ID 789
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
26,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add high priority work items to sprint 1
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': '1'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'priority', 'argument_value': ['high']}]}]"
27,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'This is a sample text'
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text'}]}]"
28,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from text containing customer feedback
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'customer feedback'}]}]"
29,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items to sprint 1
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['1', '2', '3']}, {'argument_name': 'sprint_id', 'argument_value': '1'}]}]"
30,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and return a list of work items similar to the work item with ID 'don:core:dvrv-us-1:devo/0:issue/1'
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}]"
31,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and summarize the high priority tasks created by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'issue.priority', 'argument_value': ['p0', 'p1']}, {'argument_name': 'type', 'argument_value': ['task']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[1]'}]}]"
32,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items to the current sprint
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[0]'}]}]"
33,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get high priority work items created by user1 and owned by user2
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'owned_by', 'argument_value': ['user2']}, {'argument_name': 'issue.priority', 'argument_value': ['high']}]}]"
34,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items to the sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[1]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['$$PREV[0]']}]}]"
35,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and summarize work items similar to the given work item
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': 'don:core:dvrv-us-1:devo/0:issue/1'}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': ['$$PREV[0]', '$$PREV[1]']}]}]"
36,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs [123, 456, 789] to sprint with ID 'sprint1'
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456', '789']}, {'argument_name': 'sprint_id', 'argument_value': 'sprint1'}]}]"
37,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with priority p0 to sprint 123
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'issue.priority', 'argument_value': ['p0']}, {'argument_name': 'type', 'argument_value': ['issue']}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': '123'}]}]"
38,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user's sprint and search for work items with the same sprint ID
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'sprint_id', 'argument_value': ['$$PREV[1]']}]}]"
39,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint 789
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
40,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items 123 and 456 to sprint 789
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
41,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items with high priority from the customer UltimateCustomer
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'UltimateCustomer'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'ticket.priority', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['ticket']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[1]'}]}]"
42,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1 in the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'sprint_id', 'argument_value': ['$$PREV[0]']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[1]'}]}]"
43,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Please review the customer's feedback'
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': ""Please review the customer's feedback""}]}]"
44,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and use it to prioritize work items created by that user
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['$$PREV[0]']}]}]"
45,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}]"
46,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and return a list of work items owned by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}]}]"
47,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}]}]"
48,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'The customer is not satisfied with the product'
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'The customer is not satisfied with the product'}]}]"
49,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the highest priority work item for the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'sprint_id', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'type', 'argument_value': ['work_item']}]}, {'tool_name': 'get_highest_priority', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[2]'}]}]"
50,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for insights from customer feedback
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'customer feedback'}]}, {'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': '$$PREV[0]'}]}]"
51,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}]"
52,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature for user profile'
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature for user profile'}]}]"
53,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}]}]"
54,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items to sprint 1
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['work1', 'work2', 'work3']}, {'argument_name': 'sprint_id', 'argument_value': '1'}]}]"
55,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint with ID 789
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
56,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get all work items owned by user1 and add them to sprint 1
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': '1'}]}]"
57,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature'
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature'}]}]"
58,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'This is a sample text'
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text'}]}]"
59,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[0]'}]}]"
60,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the current sprint's ID and prioritize high severity tickets from the customer UltimateCustomer
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'UltimateCustomer'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[1]']}, {'argument_name': 'ticket.severity', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['ticket']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[2]'}]}]"
61,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for insights from the text 'The sales team needs to focus on increasing revenue'
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'The sales team needs to focus on increasing revenue'}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': 'sprint1'}]}]"
62,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items 123 and 456 to the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[0]'}]}]"
63,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from text
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text.'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'type', 'argument_value': ['task']}]}]"
64,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get all tasks owned by user1 in the stage 'In Progress'
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}, {'argument_name': 'stage.name', 'argument_value': ['In Progress']}, {'argument_name': 'type', 'argument_value': ['task']}]}]"
65,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks for insights from the text 'The sales team needs to focus on increasing revenue'
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'The sales team needs to focus on increasing revenue'}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
66,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1 with high severity
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'severity', 'argument_value': ['high']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
67,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs [123, 456, 789] to sprint with ID 001
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456', '789']}, {'argument_name': 'sprint_id', 'argument_value': '001'}]}]"
68,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the list of work items owned by user1 and add them to the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}]}, {'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[1]'}]}]"
69,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user and return a list of work items owned by that user
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['$$PREV[0]']}]}]"
70,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature for project X'
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature for project X'}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
71,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123, 456, and 789 to sprint with ID 987
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456', '789']}, {'argument_name': 'sprint_id', 'argument_value': '987'}]}]"
72,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Fix the bug in the login page'
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Fix the bug in the login page'}]}]"
73,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint with ID 789
## Tool List
### Tool 1
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
74,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from text
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text.'}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
75,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and return a list of high priority tasks assigned to user1
## Tool List
### Tool 1

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'stage.name', 'argument_value': ['$$PREV[0]']}, {'argument_name': 'owned_by', 'argument_value': ['user1']}, {'argument_name': 'issue.priority', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['task']}]}]"
76,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current user's sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'who_am_i', 'arguments': []}, {'tool_name': 'get_sprint_id', 'arguments': []}]"
77,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and return the work items that are similar to the given work item
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'get_similar_work_items', 'arguments': [{'argument_name': 'work_id', 'argument_value': '$$PREV[0]'}]}]"
78,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[0]'}]}]"
79,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'This is a sample text'
## Tool List
### Tool 1
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 6
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text'}]}]"
80,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature'
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature'}]}]"
81,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
82,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 1, 2, 3 to the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['1', '2', '3']}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[1]'}]}, {'tool_name': 'get_sprint_id', 'arguments': []}]"
83,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and prioritize high priority tickets from the customer UltimateCustomer
## Tool List
### Tool 1
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}, {'tool_name': 'search_object_by_name', 'arguments': [{'argument_name': 'query', 'argument_value': 'UltimateCustomer'}]}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'ticket.rev_org', 'argument_value': ['$$PREV[2]']}, {'argument_name': 'ticket.severity', 'argument_value': ['high']}, {'argument_name': 'type', 'argument_value': ['ticket']}]}, {'tool_name': 'summarize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[3]'}]}]"
84,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}]"
85,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items with IDs 123 and 456 to sprint 789
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': ['123', '456']}, {'argument_name': 'sprint_id', 'argument_value': '789'}]}]"
86,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Add work items to sprint
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 4
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 5
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'type', 'argument_value': ['issue']}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': 'sprint1'}]}]"
87,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from the text 'Implement new feature for user1'
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'Implement new feature for user1'}]}, {'tool_name': 'add_work_items_to_sprint', 'arguments': [{'argument_name': 'work_ids', 'argument_value': '$$PREV[0]'}, {'argument_name': 'sprint_id', 'argument_value': '$$PREV[1]'}]}, {'tool_name': 'get_sprint_id', 'arguments': []}]"
88,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get all tasks owned by user1 and prioritize them
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 6

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'owned_by', 'argument_value': ['user1']}, {'argument_name': 'type', 'argument_value': ['task']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
89,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Prioritize work items created by user1 with high severity
## Tool List
### Tool 1
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 4

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}, {'argument_name': 'severity', 'argument_value': ['high']}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
90,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Create actionable tasks from text
## Tool List
### Tool 1
{
        ""tool_name"": ""prioritize_objects"",
        ""tool_description"": ""Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to prioritize"", ""type"": ""array of objects""}
        ]
    }
### Tool 2

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 3
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 5
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 7
{
        ""tool_name"": ""get_similar_work_items"",
        ""tool_description"": ""Returns a list of work items that are similar to the given work item"",
        ""arguments"": [
            {""name"": ""work_id"", ""description"": ""The ID of the work item for which you want to find similar items"", ""type"": ""string""}
        ]
    }
### Tool 8
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'create_actionable_tasks_from_text', 'arguments': [{'argument_name': 'text', 'argument_value': 'This is a sample text.'}]}, {'tool_name': 'prioritize_objects', 'arguments': [{'argument_name': 'objects', 'argument_value': '$$PREV[0]'}]}]"
91,"Task: A Tool Language model L has a set of tools T, and a user query Q is given. To answer query Q, we need to use existing tools. You are a Tool Langauge Model. You need to output the subset of tools (response) to be used to answer the query, the arguments that these tools should be called with, and how to compose the tools to answer the query.
Query Q is : 
Get the ID of the current sprint and return a list of work items created by user1
## Tool List
### Tool 1
{
        ""tool_name"": ""create_actionable_tasks_from_text"",
        ""tool_description"": ""Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item."",
        ""arguments"": [
            {""name"": ""text"", ""description"": ""The text from which the actionable insights need to be created."", ""type"": ""string""}
        ]
    }
### Tool 2
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 3
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
### Tool 4
{
        ""tool_name"": ""search_object_by_name"",
        ""tool_description"": ""Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest."",
        ""arguments"": [
            {""name"": ""query"", ""description"": ""The search string, could be for example customer’s name, part name, user name."", ""type"": ""string""}
        ]
    }
### Tool 5

    {
        ""tool_name"": ""works_list"",
        ""tool_description"": ""Returns a list of work items matching the request"",
        ""arguments"": [
            {""name"": ""applies_to_part"", ""description"": ""Filters for work belonging to any of the provided parts"", ""type"": ""array of strings""},
            {""name"": ""created_by"", ""description"": ""Filters for work created by any of these users"", ""type"": ""array of strings""},
            {""name"": ""issue.priority"", ""description"": ""Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3"", ""type"": ""array of strings""},
            {""name"": ""issue.rev_orgs"", ""description"": ""Filters for issues with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""limit"", ""description"": ""The maximum number of works to return. The default is '50'"", ""type"": ""integer(int32)""},
            {""name"": ""owned_by"", ""description"": ""Filters for work owned by any of these users"", ""type"": ""array of strings""},
            {""name"": ""stage.name"", ""description"": ""Filters for records in the provided stage(s) by name"", ""type"": ""array of strings""},
            {""name"": ""ticket.needs_response"", ""description"": ""Filters for tickets that need a response"", ""type"": ""boolean""},
            {""name"": ""ticket.rev_org"", ""description"": ""Filters for tickets associated with any of the provided Rev organizations"", ""type"": ""array of strings""},
            {""name"": ""ticket.severity"", ""description"": ""Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium"", ""type"": ""array of strings""},
            {""name"": ""ticket.source_channel"", ""description"": ""Filters for tickets with any of the provided source channels"", ""type"": ""array of strings""},
            {""name"": ""type"", ""description"": ""Filters for work of the provided types. Allowed values are issue, ticket, task."", ""type"": ""array of strings""}
        ]
    }
### Tool 6
{
        ""tool_name"": ""get_sprint_id"",
        ""tool_description"": ""Returns the ID of the current sprint"",
        ""arguments"": []
    }
### Tool 7
{
        ""tool_name"": ""who_am_i"",
        ""tool_description"": ""Returns the ID of the current user"",
        ""arguments"": []
    }
### Tool 8
{
        ""tool_name"": ""summarize_objects"",
        ""tool_description"": ""Summarizes a list of objects. The logic of summarizing a particular object type is an internal implementation detail."",
        ""arguments"": [
            {""name"": ""objects"", ""description"": ""List of objects to summarize"", ""type"": ""array of objects""}
        ]
    }
### Tool 9
{
        ""tool_name"": ""add_work_items_to_sprint"",
        ""tool_description"": ""Adds the given work items to the sprint"",
        ""arguments"": [
            {""name"": ""work_ids"", ""description"": ""A list of work item IDs to be added to the sprint"", ""type"": ""array of strings""},
            {""name"": ""sprint_id"", ""description"": ""The ID of the sprint to which the work items should be added"", ""type"": ""str""}
        ]
    }
The response should be in JSON schema. To reference the value of the ith tool in the chain, use $$PREV[i] as argument value. i = 0, 1, .. j-1; j = current tool’s index in the array. If the query could not be answered with the given set of tools, output an empty list instead.","[{'tool_name': 'get_sprint_id', 'arguments': []}, {'tool_name': 'works_list', 'arguments': [{'argument_name': 'created_by', 'argument_value': ['user1']}]}]"
