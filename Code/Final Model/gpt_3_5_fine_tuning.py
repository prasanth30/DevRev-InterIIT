# -*- coding: utf-8 -*-
"""gpt-3.5-fine_tuning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DqGQvQrbZvAIm9rOEioZfHHpA5IA2DNI
"""

!pip install openai

import pandas as pd
import json
a=pd.read_csv('/content/cleaned_data.csv')
b=a.iloc[0:2200]
c=a.iloc[2201:]

df_train = pd.DataFrame({
    'prompt': b['query'],
    'response': b['output']
})

df_valid = pd.DataFrame({
    'prompt': c['query'],
    'response': c['output']
})

training_examples = []
for index, row in df_train.iterrows():
    training_example = {
        "messages": [
            {"role": "user", "content": row['prompt']},
            {"role": "assistant", "content": row['response']}
        ]
    }
    training_examples.append(training_example)

validation_examples = []
for index, row in df_valid.iterrows():
    validation_example = {
        "messages": [
            {"role": "user", "content": row['prompt']},
            {"role": "assistant", "content": row['response']}
        ]
    }
    validation_examples.append(validation_example)

with open('training_examples.jsonl', 'w') as f:
    for example in training_examples:
        f.write(json.dumps(example) + '\n')
with open('validation_examples.jsonl', 'w') as f:
    for example in validaition_examples:
        f.write(json.dumps(example) + '\n')

from openai import OpenAI
client = OpenAI(api_key="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")

# Upload Training and Validation Files
training_file = client.files.create(
    file=open('/content/training_examples.jsonl', "rb"), purpose="fine-tune"
)
validation_file = client.files.create(
    file=open('/content/validation_examples.jsonl', "rb"), purpose="fine-tune"
)

model = client.fine_tuning.jobs.create(
    training_file=training_file.id,
    validation_file=validation_file.id,
    model="gpt-3.5-turbo",
    hyperparameters={"n_epochs":"2"}
)

df=pd.read_csv('/content/test_data.csv')

gpt_response=[]
for i in range(len(df)):
  response = client.chat.completions.create(
    model="ft:gpt-3.5-turbo-0613:devrev-inter-iit-tech-meet::8UG8JMbv",
    messages=[
      {"role": "user", "content": df.iloc[i]['query']}
    ]
  )
  gpt_response.append(response.choices[0].message.content)
  print(response.choices[0].message.content)

df['gpt_finetune_response']=gpt_response

df.to_csv('gpt_fine_tuned_results.csv')